        -:    0:Source:tranglepath.cpp
        -:    0:Graph:tranglepath.gcno
        -:    0:Data:tranglepath.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "trangle.cpp"
        -:    2:#include <gtest/gtest.h>
        -:    3:// trangletype 0代表not trangle 1代表Equilateral 2代表 Scalene 3代表Isosceles
        -:    4:
        5:    5:TEST(trangletest,c0){
        1:    6:	EXPECT_EQ(0,judgTrangle::trangletype(1,100,200));
        1:    7:	EXPECT_EQ(1,judgTrangle::trangletype(200,200,200));
        1:    8:	EXPECT_EQ(2,judgTrangle::trangletype(100,150,199));
        1:    9:	EXPECT_EQ(3,judgTrangle::trangletype(1,200,200));
        1:   10:}
        5:   11:TEST(trangletest,c1andMCDC){
        1:   12:        EXPECT_EQ(0,judgTrangle::trangletype(201,100,100));
        1:   13:        EXPECT_EQ(0,judgTrangle::trangletype(100,201,100));
        1:   14:        EXPECT_EQ(0,judgTrangle::trangletype(100,100,201));
        1:   15:        EXPECT_EQ(0,judgTrangle::trangletype(150,100,10));
        1:   16:        EXPECT_EQ(0,judgTrangle::trangletype(100,150,10));
        1:   17:        EXPECT_EQ(0,judgTrangle::trangletype(100,10,150));
        1:   18:        EXPECT_EQ(1,judgTrangle::trangletype(150,150,150));
        1:   19:        EXPECT_EQ(2,judgTrangle::trangletype(100,150,200));
        1:   20:	EXPECT_EQ(3,judgTrangle::trangletype(150,150,200));
        1:   21:}
        -:   22:
        -:   23:
        -:   24:
        -:   25:
        1:   26:int main(int argc, char** argv) {
        1:   27:        testing::InitGoogleTest(&argc, argv);
        1:   28:        return RUN_ALL_TESTS();
        3:   29:}
